version: '3'

includes:
  poetry: ../../tasks/PoetryTaskfile.yml

vars:
  VERSION:
    sh: poetry version -s

tasks:
  update-openapi:
    aliases: [uo]
    desc: Update the openapi.json file
    cmds:
      - echo "Update the openapi.json file"
      - poetry run update-openapi > openapi.json
      - echo "Done!"
    silent: true

  bump:
    desc: Bump the project version with rules:major, minor, patch, premajor, preminor, prepatch or prerelease.
    cmds:
      - task: poetry:bump
        vars:
          PROJECT_NAME: api
          VERSION_FILE_PATH: "../../bases/ecoindex/backend/VERSION"
          VERSION_RULE: "{{.CLI_ARGS}}"
    silent: true

  build-docker-backend:
    aliases: [bb]
    desc: Build the backend docker image
    cmds:
      - docker build -t vvatelot/ecoindex-api-backend --build-arg="wheel=ecoindex_api-{{.VERSION}}-py3-none-any.whl" -f docker/backend/dockerfile .
    silent: true

  build-docker-worker:
    aliases: [bw]
    desc: Build the worker docker image
    cmds:
      - docker build -t vvatelot/ecoindex-api-worker --build-arg="wheel=ecoindex_api-{{.VERSION}}-py3-none-any.whl" -f docker/worker/dockerfile .
    silent: true

  build-docker-images:
    aliases: [bi]
    desc: Build the docker images
    deps: [build-docker-backend, build-docker-worker]
    cmds:
      - echo "Build the docker images"
    silent: true

  migration-create:
    aliases: [mc]
    desc: Create a new alembic migration
    cmds:
      - poetry run alembic revision --autogenerate -m "{{.CLI_ARGS}}"
    silent: true
  
  start-redis:
    aliases: [sr]
    desc: Start the redis server
    cmds:
      - docker run --rm -p 6379:6379 -d redis:alpine
    status:
      - docker ps | grep redis
    silent: true

  start-worker:
    aliases: [sw]
    deps: [start-redis]
    desc: Start the worker
    cmds:
      - poetry run celery -A ecoindex.worker.tasks worker -l info
    silent: true
  
  start-backend:
    aliases: [sb]
    deps: [start-redis]
    desc: Start the backend
    cmds:
      - poetry run uvicorn ecoindex.backend.main:app --reload
    silent: true

  start-dev:
    aliases: [sd]
    deps: [start-backend, start-worker]
    desc: Start the backend and the worker
    cmds:
      - echo "Starting the backend and the worker"
    silent: true
