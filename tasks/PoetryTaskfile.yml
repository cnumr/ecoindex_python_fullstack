version: '3'

tasks:
  install:
    directory: '{{.USER_WORKING_DIR}}'
    desc: Install the poetry project dependencies
    cmds:
      - poetry install
    silent: true

  update:
    directory: '{{.USER_WORKING_DIR}}'
    desc: Update dependencies
    cmds:
      - poetry update
    silent: true

  build:
    directory: '{{.USER_WORKING_DIR}}'
    desc: Build the poetry project dependencies, and then build the project distribution
    cmds:
      - poetry lock
      - poetry build-project
    silent: true

  bump:
    directory: '{{.USER_WORKING_DIR}}'
    desc: Bump the project version with rules:major, minor, patch, premajor, preminor, prepatch or prerelease.
    preconditions: 
      - sh: '[[ "{{.CLI_ARGS}}" =~ ^(major|minor|patch|premajor|preminor|prepatch|prerelease)$ ]]'
        msg: "Invalid version rule: `{{.CLI_ARGS}}` must be major, minor, patch, premajor, preminor, prepatch or prerelease."
    cmds:
      - poetry version -s > /tmp/version-current-output-{{.PROJECT_NAME}}
      - poetry version {{.VERSION_RULE}} -s > /tmp/version-bump-output-{{.PROJECT_NAME}}
      - echo "Current version:$(cat /tmp/version-current-output-{{.PROJECT_NAME}})"
      - echo "Bumped version:$(cat /tmp/version-bump-output-{{.PROJECT_NAME}})"
      - echo "Update {{.VERSION_FILE_PATH}}"
      - echo "$(cat /tmp/version-bump-output-{{.PROJECT_NAME}})" > {{.VERSION_FILE_PATH}}
    silent: true